import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs'

}

android {
    namespace 'com.flag.invadems'

    compileSdk 34
    packaging {
        dex {
            useLegacyPackaging = false
        }
    }

        signingConfigs {
        config {
            storeFile file("$rootDir/keystore/sign1.jks")
            storePassword 'aaaaaa'
            keyAlias = 'key0'
            keyPassword 'aaaaaa'
        }

    }


    defaultConfig {
        applicationId "com.flag.invadems"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled = true

        testInstrumentationRunner = "com.flag.invadems.CustomTestRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            debuggable true
            minifyEnabled false

            signingConfig signingConfigs.config
        }


    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

//    packagingOptions {
//        resources {
//            excludes += '/META-INF/{AL2.0,LGPL2.1}'
//        }
//    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding = true
    }
    hilt {
        enableAggregatingTask = true
    }
}

dependencies {
    implementation project(path: ':management')//    implementation(project(':managment',))
//    implementation libs.androidx.core.ktx.v1101
//    implementation libs.accompanist.swiperefresh
    implementation libs.androidx.lifecycle.runtime.ktx.v261
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation libs.accompanist.permissions
    implementation libs.androidx.databinding.common
    implementation(libs.androidx.navigation.fragment.ktx)
    implementation(libs.androidx.navigation.ui.ktx)
    implementation(libs.androidx.swiperefreshlayout)

    //coroutines
    implementation(libs.kotlinx.coroutines.android)
    implementation libs.kotlinx.coroutines.core

    implementation(libs.androidx.lifecycle.viewmodel.ktx)

    // LiveData
    implementation(libs.androidx.lifecycle.livedata.ktx)

    //dagger / hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.android.compiler)

    implementation libs.androidx.work.runtime.ktx
    implementation libs.androidx.runner
    implementation libs.androidx.appcompat
    implementation libs.material.v190
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.databinding.runtime






    implementation("androidx.multidex:multidex:2.0.1")


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:1.5.0"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:5.1.1"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    // Optional -- Mockk framework
    testImplementation "io.mockk:mockk:1.12.3"
    // For hilt Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:2.44")
    kaptTest("com.google.dagger:hilt-android-compiler:2.44")
    
    // Coroutines Test
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation "androidx.arch.core:core-testing:2.2.0"


}
// Allow references to generated code
kapt {
    correctErrorTypes true
}